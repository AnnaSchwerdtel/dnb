* weighing

We want to weigh the books in the [[http://www.dnb.de/][German National Library]]
(DNB). Therefore, we

1. extract a list of writers from [[https://www.wikidata.org/][WikiData]] together with their GND id
2. download [[http://www.dnb.de/EN/Service/DigitaleDienste/LinkedData/linkeddata_node.html][linked data about the DNB books]]
3. joining the writer list with the list of books using the GND id

** extracting writers from WikiData

We query WikiData's [[https://query.wikidata.org/][SPARQL endpoint]] to get a list of writers. Since
[[https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/queries][SPARQL queries]] become quickly complex, we build the final query step
by step.

We will use the following WikiData items:
- property [[https://www.wikidata.org/wiki/Property:P106][occupation (P106)]]
- property [[https://www.wikidata.org/wiki/Property:P227][GND ID (P227)]]
- property [[https://www.wikidata.org/wiki/Property:P279][subclass of (P279)]]
- entity [[https://www.wikidata.org/wiki/Q36180][writer (Q36180)]]
- potentially also the following subclasses of [[https://www.wikidata.org/wiki/Q36180][writer (Q36180)]]: [[https://www.wikidata.org/wiki/Q49757][poet
  (Q49757)]], [[https://www.wikidata.org/wiki/Q6625963][novelist (Q6625963)]], [[https://www.wikidata.org/wiki/Q15949613][short story writer (Q15949613)]]

*** occupation is writer

First, we query for all WikiData items whose [[https://www.wikidata.org/wiki/Property:P106][occupation (P106)]] is
[[https://www.wikidata.org/wiki/Q36180][writer (Q36180)]] ([[https://query.wikidata.org/#%20%20SELECT%20%3Fitem%20%3FitemLabel%0A%20%20WHERE%0A%20%20{%0A%20%20%20%20%3Fitem%20wdt%3AP106%20wd%3AQ36180%20.%20%20%20%20%20%20%20%20%20%20%20%20%20%20%23%20occupation%28P106%29%20is%20writer%28Q36180%29%0A%20%20%20%20SERVICE%20wikibase%3Alabel%20{%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%23%20...%20include%20the%20labels%0A%20%20%20%20%20%20bd%3AserviceParam%20wikibase%3Alanguage%20%22en%22%0A%20%20%20%20}%0A%20%20}%0A%20%20LIMIT%2010%0A%0A][SPARQL]]):

#+BEGIN_SRC sparql :url https://query.wikidata.org/sparql :format text/csv
  SELECT ?item ?itemLabel
  WHERE
  {
    ?item wdt:P106 wd:Q36180 .              # occupation(P106) is writer(Q36180)
    SERVICE wikibase:label {                # ... include the labels
      bd:serviceParam wikibase:language "en"
    }
  }
  LIMIT 10
#+END_SRC

| item         | itemLabel                    |
|--------------+------------------------------|
| wd:Q3737990  | Fabrizio Corona              |
| wd:Q10329870 | Miguel Temprano              |
| wd:Q17639667 | Sébastien Valiela            |
| wd:Q3335     | George Orwell                |
| wd:Q23434    | Ernest Hemingway             |
| wd:Q28658    | John F. Burns                |
| wd:Q29344    | William T. Vollmann          |
| wd:Q74465    | Friedrich Wilhelm Hackländer |
| wd:Q75265    | Otto von Corvin              |
| wd:Q77475    | Ludwig Ganghofer             |

*** occupation is writer or a subclass

Second, we extend this to include [[https://www.wikidata.org/wiki/Property:P279][subclasses of (P279)]] [[https://www.wikidata.org/wiki/Q36180][writer (Q36180)]]
([[https://query.wikidata.org/#%2520%2520SELECT%2520%253Fitem%2520%253FitemLabel%250A%2520%2520WHERE%250A%2520%2520{%250A%2520%2520%2520%2520%253Fitem%2520wdt%253AP106%252Fwdt%253AP279*%2520wd%253AQ36180%2520.%2520%2520%2520%2523%2520occupation%2528P106%2529%2520is%2520writer%2528Q36180%2529%2520or%2520a%2520subclass%2528P279%2529%250A%2520%2520%2520%2520SERVICE%2520wikibase%253Alabel%2520{%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2523%2520...%2520include%2520the%2520labels%250A%2520%2520%2520%2520%2520%2520bd%253AserviceParam%2520wikibase%253Alanguage%2520%2522en%2522%250A%2520%2520%2520%2520}%250A%2520%2520}%250A%2520%2520LIMIT%252010%250A][SPARQL]]):

#+BEGIN_SRC sparql :url https://query.wikidata.org/sparql :format text/csv
  SELECT ?item ?itemLabel
  WHERE
  {
    ?item wdt:P106/wdt:P279* wd:Q36180 .   # occupation(P106) is writer(Q36180) or a subclass(P279)
    SERVICE wikibase:label {               # ... include the labels
      bd:serviceParam wikibase:language "en"
    }
  }
  LIMIT 10
#+END_SRC

| item         | itemLabel                    |
|--------------+------------------------------|
| wd:Q3737990  | Fabrizio Corona              |
| wd:Q10329870 | Miguel Temprano              |
| wd:Q17639667 | Sébastien Valiela            |
| wd:Q3335     | George Orwell                |
| wd:Q23434    | Ernest Hemingway             |
| wd:Q28658    | John F. Burns                |
| wd:Q29344    | William T. Vollmann          |
| wd:Q74465    | Friedrich Wilhelm Hackländer |
| wd:Q75265    | Otto von Corvin              |
| wd:Q77475    | Ludwig Ganghofer             |

*** occupation is writer or a subclass and has GND id

Third, we ensure that the item has a
[[https://www.wikidata.org/wiki/Property:P227][GND ID (P227)]]
property ([[https://query.wikidata.org/#%20%20SELECT%20%3Fitem%20%3FitemLabel%20%3Fgndid%0A%20%20WHERE%0A%20%20{%0A%20%20%20%20%3Fitem%20wdt%3AP106%2Fwdt%3AP279*%20wd%3AQ36180%20.%20%20%23%20occupation%28P106%29%20is%20writer%28Q36180%29%20or%20a%20subclass%28P279%29%0A%20%20%20%20%3Fitem%20p%3AP227%20%3Fgndid%20.%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%23%20...%20with%20a%20GND%20ID%28P227%29%0A%20%20%20%20SERVICE%20wikibase%3Alabel%20{%20%20%20%20%20%20%20%20%20%20%20%20%20%20%23%20...%20include%20the%20labels%0A%20%20%20%20%20%20bd%3AserviceParam%20wikibase%3Alanguage%20%22en%22%0A%20%20%20%20}%0A%20%20}%0A%20%20LIMIT%2010%0A][SPARQL]]):

#+BEGIN_SRC sparql :url https://query.wikidata.org/sparql :format text/csv
  SELECT ?item ?itemLabel ?gndid
  WHERE
  {
    ?item wdt:P106/wdt:P279* wd:Q36180 .  # occupation(P106) is writer(Q36180) or a subclass(P279)
    ?item p:P227 ?gndid .                 # ... with a GND ID(P227)
    SERVICE wikibase:label {              # ... include the labels
      bd:serviceParam wikibase:language "en"
    }
  }
  LIMIT 10
#+END_SRC

*TODO*: ~FILTER(BOUND(?gndid))~?


| item    | itemLabel        | gndid                                                  |
|---------+------------------+--------------------------------------------------------|
| wd:Q42  | Douglas Adams    | wd:statement/q42-8AA8CCC1-86CE-4C66-88FC-267621A81EA0  |
| wd:Q272 | Paul Morand      | wd:statement/q272-9373E898-F2B0-4BF8-871A-B09A3A055577 |
| wd:Q303 | Elvis Presley    | wd:statement/q303-44C100BC-71C3-4D4F-881D-6729D4B58D28 |
| wd:Q392 | Bob Dylan        | wd:statement/q392-0190B28E-161C-4BA9-99D4-4B7C27B6F4FD |
| wd:Q489 | Bill Maher       | wd:statement/q489-79FF5E0D-6C59-48AE-8266-775105133852 |
| wd:Q765 | Dario Fo         | wd:statement/q765-5FD4C8D5-2258-4091-87AB-C4112FE30CE3 |
| wd:Q835 | Mikhail Bulgakov | wd:statement/q835-94A1550F-D43D-4C6F-A80F-563889002835 |
| wd:Q853 | Andrei Tarkovsky | wd:statement/q853-A2E1C3C3-2F32-4A0B-B091-2DBB06BCEF18 |
| wd:Q882 | Charlie Chaplin  | wd:statement/q882-A7EB6AB3-8F42-4405-8B47-6E78D2C1E2C1 |
| wd:Q892 | J. R. R. Tolkien | wd:statement/q892-122F7562-51B2-4A14-82D6-6202DB5A79ED |

Unfortunately, we do not get the GND id but a reference to a
[[https://www.wikidata.org/wiki/Help:Statements][statement]]. 
# Explain in detail what this means? 
We have to resolve this statement to get the actual GND id ([[https://query.wikidata.org/#%20%20SELECT%20%3Fitem%20%3FitemLabel%20%3Fgndid%0A%20%20WHERE%0A%20%20{%0A%20%20%20%20%3Fitem%20wdt%3AP106%20wd%3AQ36180%20.%20%20%20%20%20%20%20%20%20%20%20%20%20%20%23%20occupation%28P106%29%20is%20writer%28Q36180%29%0A%20%20%20%20%3Fitem%20p%3AP227%20%3Fwds%20.%20%0A%20%20%20%20%3Fwds%20%3Fv%20%3Fgndid%20.%0A%20%20%20%20%3FwdP%20wikibase%3Aclaim%20p%3AP227%20.%0A%20%20%20%20%3FwdP%20wikibase%3AstatementProperty%20%3Fv%20.%0A%20%20%20%20SERVICE%20wikibase%3Alabel%20{%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%23%20...%20include%20the%20labels%0A%20%20%20%20%20%20bd%3AserviceParam%20wikibase%3Alanguage%20%22en%22%0A%20%20%20%20}%0A%20%20}%0A%20%20LIMIT%2010%0A][SPARQL]],
inspired by [[https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/queries/examples#Awarded_Chemistry_Nobel_Prizes][an example query for awarded Chemistry Nobel Prizes]]):

#+BEGIN_SRC sparql :url https://query.wikidata.org/sparql :format text/csv
  SELECT ?item ?itemLabel ?gndid
  WHERE
  {
    ?item wdt:P106 wd:Q36180 .              # occupation(P106) is writer(Q36180)
    ?item p:P227 ?wds . 
    ?wds ?v ?gndid .
    ?wdP wikibase:claim p:P227 .
    ?wdP wikibase:statementProperty ?v .
    SERVICE wikibase:label {                # ... include the labels
      bd:serviceParam wikibase:language "en"
    }
  }
  LIMIT 10
#+END_SRC

| item     | itemLabel          |      gndid |
|----------+--------------------+------------|
| wd:Q4498 | Beatritz de Dia    |  134832809 |
| wd:Q42   | Douglas Adams      |  119033364 |
| wd:Q377  | Yanka Kupala       |  118640267 |
| wd:Q501  | Charles Baudelaire |  118507184 |
| wd:Q555  | Rachel Maddow      | 1022390589 |
| wd:Q747  | Pierre Corneille   |  118522175 |
| wd:Q926  | Roald Amundsen     |  118502670 |
| wd:Q1151 | Hector Berlioz     |  118509675 |
| wd:Q4128 | Louis Aragon       |  118503774 |
| wd:Q4340 | Andreas Capellanus |  118502905 |

Let us download the actual data:

#+BEGIN_SRC sh :results silent
  curl \
      --header "Accept: text/tab-separated-values" \
      --output wikidata_writer_subclass_gndid.tsv \
      --globoff \
       'https://query.wikidata.org/sparql?query=SELECT%20%3Fitem%20%3FitemLabel%20%3Fgndid%0A%20%20WHERE%0A%20%20{%0A%20%20%20%20%3Fitem%20wdt%3AP106%20wd%3AQ36180%20.%20%20%20%20%20%20%20%20%20%20%20%20%20%20%23%20occupation%28P106%29%20is%20writer%28Q36180%29%0A%20%20%20%20%3Fitem%20p%3AP227%20%3Fwds%20.%20%0A%20%20%20%20%3Fwds%20%3Fv%20%3Fgndid%20.%0A%20%20%20%20%3FwdP%20wikibase%3Aclaim%20p%3AP227%20.%0A%20%20%20%20%3FwdP%20wikibase%3AstatementProperty%20%3Fv%20.%0A%20%20%20%20SERVICE%20wikibase%3Alabel%20{%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%23%20...%20include%20the%20labels%0A%20%20%20%20%20%20bd%3AserviceParam%20wikibase%3Alanguage%20%22en%22%0A%20%20%20%20}%0A%20%20}'
#+END_SRC

The result is in [[file:wikidata_writer_subclass_gndid.tsv][wikidata_writer_subclass_gndid.tsv]].

*** checking the data

Let us check the data by searching for Goethe:

#+BEGIN_SRC sh
  grep Goethe wikidata_writer_subclass_gndid.tsv
#+END_SRC

| <http://www.wikidata.org/entity/Q1586540> | Wolfgang Maximilian von Goethe | 118717928 |
| <http://www.wikidata.org/entity/Q1585819> | Johann Caspar Goethe           | 118695940 |

Unfortunately, Johann Wolfgang von Goethe is not contained, although
[[https://www.wikidata.org/wiki/Q5879][he]] has a GND ID and as occupation (among others) [[https://www.wikidata.org/wiki/Q6625963][novelist (Q6625963)]]
which is a subclass of [[https://www.wikidata.org/wiki/Q36180][writer (Q36180)]]. *What has happened?*


** downloading linked data from DNB

#+BEGIN_SRC sh :results silent
  curl --output GND.ttl.gz "http://datendienst.dnb.de/cgi-bin/mabit.pl?cmd=fetch&userID=opendata&pass=opendata&mabheft=GND.ttl.gz"
#+END_SRC

It contains entries like these:

#+BEGIN_SRC ttl
<http://d-nb.info/1057803898> a bibo:Document ;
        dcterms:medium <http://rdvocab.info/termList/RDACarrierType/1044> ;
        owl:sameAs <http://hub.culturegraph.org/resource/DNB-1057803898> ;
        dc:identifier "(DE-101)1057803898" ;
        bibo:isbn13 "9783150186329" ;
        rdau:P60521 "kart. : EUR 3.60" ;
        dc:identifier "(OCoLC)890646150" ;
        dcterms:language <http://id.loc.gov/vocabulary/iso639-2/ger> ;
        dc:title "Die Leiden des jungen Werthers" ;
        dcterms:creator <http://d-nb.info/gnd/118540238> ;
        rdau:P60163 "Stuttgart" ;
        dc:publisher "Reclam" ;
        rdau:P60333 "Stuttgart : Reclam, 2014" ;
        isbd:P1053 "140 S." ;
        dcterms:bibliographicCitation "Reclams Universal-Bibliothek ; Nr. 18632" ;
        dcterms:issued "2014" ;
        rdau:P60493 "erste Fassung 1774" ;
        bibo:authorList _:node1ashhhff1x4370327 .
#+END_SRC

We find the GND id 118540238 in the URL http://d-nb.info/gnd/118540238
of the ~dcterms:creator~ property. It points to 

#+BEGIN_SRC sh
  grep 118540238 wikidata_writer_subclass_gndid.tsv
#+END_SRC

#+RESULTS:

** joining writers and books



* scratch

*** subclasses of writer

Just out of curiosity: what are the [[https://www.wikidata.org/wiki/Property:P279][subclasses of (P279)]] [[https://www.wikidata.org/wiki/Q36180][writer
(Q36180)]] ([[https://query.wikidata.org/#%2520%2520SELECT%2520%253Fs%2520%253Fdesc%250A%2520%2520WHERE%250A%2520%2520{%250A%2520%2520%2520%2520%253Fs%2520wdt%253AP279%2520wd%253AQ36180%2520.%250A%2520%2520%2520%2520OPTIONAL%2520{%250A%2520%2520%2520%2520%2520%2520%253Fs%2520rdfs%253Alabel%2520%253Fdesc%2520filter%2520%2528lang%2528%253Fdesc%2529%2520%253D%2520%2522en%2522%2529.%250A%2520%2520%2520%2520}%250A%2520%2520}%250A%2520%2520ORDER%2520BY%2520%253Fdesc%250A][SPARQL]]):

#+BEGIN_SRC sparql :url https://query.wikidata.org/sparql :format text/csv
  SELECT ?s ?desc
  WHERE
  {
    ?s wdt:P279 wd:Q36180 .
    OPTIONAL {
      ?s rdfs:label ?desc filter (lang(?desc) = "en").
    }
  }
  ORDER BY ?desc
#+END_SRC


| s            | desc                   |
|--------------+------------------------|
| wd:Q152182   |                        |
| wd:Q21140478 |                        |
| wd:Q26203955 |                        |
| wd:Q26260814 |                        |
| wd:Q4938203  | Boholano writers       |
| wd:Q16637669 | Félibresse             |
| wd:Q764233   | Geoponici              |
| wd:Q20532870 | Uzbek writers          |
| wd:Q864380   | biographer             |
| wd:Q4853732  | children's writer      |
| wd:Q27431213 | cookery writer         |
| wd:Q11500768 | cooking expert         |
| wd:Q14466416 | copywriter             |
| wd:Q3589290  | correspondent          |
| wd:Q21036234 | crime writer           |
| wd:Q10297252 | detective writer       |
| wd:Q22811127 | devotional writer      |
| wd:Q487596   | dramaturge             |
| wd:Q11774202 | essayist               |
| wd:Q3064032  | fabulist               |
| wd:Q623386   | ghostwriter            |
| wd:Q5689489  | head writer            |
| wd:Q8178443  | librettist             |
| wd:Q18533509 | medical writer         |
| wd:Q24387326 | mythographer           |
| wd:Q15980158 | non-fiction writer     |
| wd:Q6625963  | novelist               |
| wd:Q16254673 | pamphleteer            |
| wd:Q551835   | physician writer       |
| wd:Q214917   | playwright             |
| wd:Q49757    | poet                   |
| wd:Q12144794 | prosaist               |
| wd:Q18844224 | science fiction writer |
| wd:Q28389    | screenwriter           |
| wd:Q15949613 | short story writer     |
| wd:Q175301   | speechwriter           |
| wd:Q7596574  | staff writer           |
| wd:Q15979013 | surrealist writer      |
| wd:Q1568338  | technical writer       |
| wd:Q381353   | woman of letters       |
| wd:Q27212012 | young adult writer     |

BTW: the query to get the subclasses of [[https://www.wikidata.org/wiki/Q7725634][literary work (Q7725634)]] is
provided as [[https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/queries/examples#All_subclasses_of_.22Literary_Work.22][an example]] ([[https://query.wikidata.org/#%2520%2520SELECT%2520%253Fs%2520%253Fdesc%250A%2520%2520WHERE%250A%2520%2520{%250A%2520%2520%2520%2520%253Fs%2520wdt%253AP279%2520wd%253AQ7725634%2520.%250A%2520%2520%2520%2520OPTIONAL%2520{%250A%2520%2520%2520%2520%2520%2520%253Fs%2520rdfs%253Alabel%2520%253Fdesc%2520filter%2520%2528lang%2528%253Fdesc%2529%2520%253D%2520%2522en%2522%2529.%250A%2520%2520%2520%2520}%250A%2520%2520}%250A%2520%2520ORDER%2520BY%2520%253Fs][SPARQL]]):

#+BEGIN_SRC sparql
  SELECT ?s ?desc
  WHERE
  {
    ?s wdt:P279 wd:Q7725634 .
    OPTIONAL {
      ?s rdfs:label ?desc filter (lang(?desc) = "en").
    }
  }
  ORDER BY ?s
#+END_SRC
